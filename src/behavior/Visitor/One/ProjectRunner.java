package behavior.Visitor.One;

public class ProjectRunner {
    public static void main(String[] args) {
        Project project = new Project();

        Developer junior = new JunioreDeveloper();
        Developer senior = new SeniorDeveloper();

        System.out.println("Junior in Action...");
        project.beWritten(junior);

        System.out.println("\n============================\n");

        System.out.println("Senior in Action");
        project.beWritten(senior);

    }
}
// Шаблон: Посетитель (Visitor)
// Цель:
// Описание действий, которые выполняются с каждым объектом в некоторой структуре
// Для чего используется:
// Описание операций, которые выполняются с каждым объектом из некоторой структуры. Позволяет определить новую операцию без изменения классов этих объектов.
// Пример использования:
// - в структуре присутствуют объекты многих классов с различными интерфейсами и нам необходимо выполнить над ними операции, которые зависят от конкретных классов:
// - необходимо выполнять не связанные между собой операции над объектами, которые входят в состав структуры и мы не хотим добавлять эти операции в классы:
// классы, которые устанавливают структуру объектов редко изменяются, но часто добавляются новые операции над этой структурой.