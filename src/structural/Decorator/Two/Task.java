package structural.Decorator.Two;

public class Task {
    public static void main(String[] args) {
        Developer developer = new JavaTeamLead(new SeniorJavaDeveloper(new JavaDeveloper()));
        System.out.println(developer.makeJob());
    }
}
//        Шаблон: Декоратор(Decorator)
//
//        Цель:
//        Динамическое добавление новых обязанностей объекту.
//
//        Для чего используется:
//        используется в качестве альтернативы порождению подклассов для расиширения функциональности.
//
//        Пример использования:
//        — динамическое и понятное клиентам добавления обязанностей объектам;
//        — реализация обязанностей, которые могут быть сняты с объекта;
//        — расширение класса путем порождения подклассов невозможно по каким-либо причинам.
