package structural.Decorator.One;

public class Task1 {
    public static void main(String[] args) {
        Developer1 developer = new JavaTeamLead1(new SeniorJavaDeveloper1(new JavaDeveloper1()));
        developer.makeJob1();
    }
}
//Шаблон Decorator расширяет функциональность основного класса путем добавления дополнительного кода в начале, конце или вместо существующей реализации.

//        Шаблон: Декоратор(Decorator)
//
//        Цель:
//        Динамическое добавление новых обязанностей объекту.
//
//        Для чего используется:
//        используется в качестве альтернативы порождению подклассов для расиширения функциональности.
//
//        Пример использования:
//        — динамическое и понятное клиентам добавления обязанностей объектам;
//        — реализация обязанностей, которые могут быть сняты с объекта;
//        — расширение класса путем порождения подклассов невозможно по каким-либо причинам.
